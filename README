LIBRARY
    Hidden Markov models test -- task five in SHAD "analysis of sequences in 
    bioinformatics" course.

REQUIREMENTS
    1) Python 3
    2) NumPy
    3) SciPy
    
CONTENTS
    tweaks.py -- module with all data-generation tweaks.

    make.py -- module for making data. Contains generation parameters and data-
    making functions.
            
            transition_matrix = make.transitions()
            emission_matrix = make.emissions()
            correct_states = make.states(transition_matrix)
            values = make.values(correct_states, emission_matrix)
            
    learn.py -- module with 3 main HMM algorithms: EM, Viterbi and forward-back-
    ward.
                
            # HMM is a tuple, (transition_matrix, emission_matrix)
            hmm = learn.hmm(values)
            states = learn.states_viterbi(values, hmm[0], hmm[1])
            states = learn.states_forward_backward(values, hmm[0], hmm[1])
            
    check.py -- module for checking quality of resulting segmentation.
        
            precision = check.segments_precision(correct_states, states)
            recall = check.segments_recall(correct_states, states)
            # ... more functions available